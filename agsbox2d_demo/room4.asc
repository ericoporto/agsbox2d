// room script file
World* world;
Overlay* ov;

struct Physical {
  Body* body;
  Shape* shape;
  Fixture* fixture;
};

Physical ball;

Physical box1;
Physical box2;

Physical box3;
Physical box4;

Physical ball2;
Physical ball3;

Body*[] setWalls(World* wrld) { 
  Body* _w[]; 
  _w = new Body[5]; 
  _w[0] = AgsBox2D.CreateBody(wrld, 158.7, 175.0, eBodyStatic); 
  AgsBox2D.CreateFixture(_w[0], AgsBox2D.CreateRectangleShape(327.3, 30.0)); 
  _w[0].Angle =0.0000 ; 
  _w[1] = AgsBox2D.CreateBody(wrld, 318.0, 96.8, eBodyStatic); 
  AgsBox2D.CreateFixture(_w[1], AgsBox2D.CreateRectangleShape(30.0, 201.7)); 
  _w[1].Angle =0.0000 ; 
  _w[2] = AgsBox2D.CreateBody(wrld, 161.2, -2.5, eBodyStatic); 
  AgsBox2D.CreateFixture(_w[2], AgsBox2D.CreateRectangleShape(310.3, 21.7)); 
  _w[2].Angle =0.0000 ; 
  _w[3] = AgsBox2D.CreateBody(wrld, -0.7, 90.7, eBodyStatic); 
  AgsBox2D.CreateFixture(_w[3], AgsBox2D.CreateRectangleShape(20.0, 186.7)); 
  _w[3].Angle =0.0000 ; 
  _w[4] = null; 
  return _w; 
} 



function room_AfterFadeIn()
{

}

function room_Load()
{
  if(world == null){
    AgsBox2D.SetMeter(32.0);
    world = AgsBox2D.CreateWorld(0.0, 9.8*AgsBox2D.GetMeter());
    setWalls(world);
    ball.body = AgsBox2D.CreateBody(world, 160.0, 40.0, eBodyDynamic);
    ball.body.FixedRotation = false;
    ball.shape = AgsBox2D.CreateCircleShape(20.0);
    ball.fixture = AgsBox2D.CreateFixture(ball.body, ball.shape, 1.0); 
    ball.fixture.Restitution = 0.5;  
    
    box1.body = AgsBox2D.CreateBody(world,  128.0, 100.0, eBodyDynamic);
    box1.shape = AgsBox2D.CreateRectangleShape(20.0, 20.0);
    box1.fixture = AgsBox2D.CreateFixture(box1.body, box1.shape, 2.0);
    
    box2.body = AgsBox2D.CreateBody(world,  192.0, 100.0, eBodyDynamic);
    box2.shape = AgsBox2D.CreateRectangleShape(20.0, 20.0);
    box2.fixture = AgsBox2D.CreateFixture(box2.body, box2.shape, 2.0);
    
    AgsBox2D.CreateDistanceJoint(box1.body, box2.body, 128.0, 100.0, 192.0, 100.0, true);
    
    
    box1.body = AgsBox2D.CreateBody(world,  128.0, 120.0, eBodyDynamic);
    box1.shape = AgsBox2D.CreateRectangleShape(20.0, 20.0);
    box1.fixture = AgsBox2D.CreateFixture(box1.body, box1.shape, 2.0);
    
    box2.body = AgsBox2D.CreateBody(world,  192.0, 120.0, eBodyDynamic);
    box2.shape = AgsBox2D.CreateRectangleShape(20.0, 20.0);
    box2.fixture = AgsBox2D.CreateFixture(box2.body, box2.shape, 2.0);
    
    AgsBox2D.CreateDistanceJoint(box1.body, box2.body, 128.0, 120.0, 192.0, 120.0, true);
        
    box3.body = AgsBox2D.CreateBody(world,  128.0, 70.0, eBodyDynamic);
    box3.shape = AgsBox2D.CreateRectangleShape(40.0, 20.0);
    box3.fixture = AgsBox2D.CreateFixture(box3.body, box3.shape, 2.0);
    
    box4.body = AgsBox2D.CreateBody(world,  192.0, 70.0, eBodyDynamic);
    box4.shape = AgsBox2D.CreateRectangleShape(40.0, 20.0);
    box4.fixture = AgsBox2D.CreateFixture(box4.body, box4.shape, 2.0);
        
    AgsBox2D.CreatePulleyJoint(box3.body, box4.body,
                               PointF.Create(128.0, 30.0), PointF.Create(192.0, 30.0), 
                               PointF.Create(128.0, 70.0), PointF.Create(192.0, 70.0),  1.0 , false);
                               
                               
    ball2.body = AgsBox2D.CreateBody(world, 40.0, 40.0, eBodyDynamic);
    ball2.body.FixedRotation = false;
    ball2.shape = AgsBox2D.CreateCircleShape(12.0);
    ball2.fixture = AgsBox2D.CreateFixture(ball2.body, ball2.shape, 1.0); 
    ball2.fixture.Restitution = 0.5;  
    ball2.fixture.CategoryBits = 2;
    ball2.fixture.MaskBits = 65535-4;
    
    ball3.body = AgsBox2D.CreateBody(world, 40.0, 30.0, eBodyDynamic);
    ball3.body.FixedRotation = false;
    ball3.shape = AgsBox2D.CreateCircleShape(14.0);
    ball3.fixture = AgsBox2D.CreateFixture(ball3.body, ball3.shape, 2.0); 
    ball3.fixture.Restitution = 0.7;
    ball3.fixture.CategoryBits = 4;
    ball3.fixture.MaskBits = 65535-2;
    
  }

}

bool was_mouse_pressed;
bool right_was_mouse_pressed;
Joint* myMouseJoint;
float init_x,  init_y;
function room_RepExec()
{
  if(!was_mouse_pressed && mouse.IsButtonDown(eMouseLeft)){
    float m_x = IntToFloat(mouse.x);
    float m_y = IntToFloat(mouse.y);
    
    FixtureArray* farr = world.BoundingBoxQuery(m_x-0.5, m_y-0.5, m_x+0.5, m_y+0.5);
    
    if(farr!=null && farr.Size >= 1 && farr.Items[0].TestPoint(m_x, m_y)){
      myMouseJoint = AgsBox2D.CreateMouseJoint(farr.Items[0].Body, IntToFloat(mouse.x), IntToFloat(mouse.y));
    } 
    
  } else if(was_mouse_pressed && !mouse.IsButtonDown(eMouseLeft)){
    AgsBox2D.DestroyJoint(world, myMouseJoint);
  } else if (mouse.IsButtonDown(eMouseLeft) && myMouseJoint != null && myMouseJoint.IsValid ) {
    myMouseJoint.AsMouse.SetTarget(IntToFloat(mouse.x), IntToFloat(mouse.y));
  }
  
  
  if(!right_was_mouse_pressed && mouse.IsButtonDown(eMouseRight)){
    init_x = IntToFloat(mouse.x);
    init_y = IntToFloat(mouse.y);
  } else if(mouse.IsButtonDown(eMouseRight)) {
    float now_x = IntToFloat(mouse.x);
    float now_y = IntToFloat(mouse.y);

    RaycastResult* rr = world.Raycast(init_x, init_y, now_x, now_y);
    if(rr.Length >= 1){ 
      PointF* pf = PointF.Create(rr.PointX[0], rr.PointY[0]);
      pf = pf.Rotate(Maths.Pi/2.0);
      pf = pf.Scale(100.0);
      rr.Fixture[0].Body.ApplyForce(pf.X ,  pf.Y); 
    }
  }
  
  
  was_mouse_pressed = mouse.IsButtonDown(eMouseLeft);
  right_was_mouse_pressed = mouse.IsButtonDown(eMouseRight);
  if(IsKeyPressed(eKeyLeftArrow)) ball.body.ApplyForce(-500.0, 0.0);
  if(IsKeyPressed(eKeyRightArrow)) ball.body.ApplyForce(500.0, 0.0);
  if(IsKeyPressed(eKeyUpArrow)){
    ball.body.ApplyForce(0.0, -6000.0);
    ball.body.SetLinearVelocity(0.0, 0.0);
  }
  
  if(ov!=null && ov.Valid) ov.Remove();  
  ov = Overlay.CreateGraphical(0, 0, world.GetDebugSprite(), true);
  
  world.Step(1.0/IntToFloat(GetGameSpeed()), 8, 3);
}
